# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import grpc_networking.proto.dominion_pb2 as dominion__pb2


class DominionServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Join = channel.unary_stream(
                '/DominionServer/Join',
                request_serializer=dominion__pb2.PlayerInfo.SerializeToString,
                response_deserializer=dominion__pb2.Message.FromString,
                )
        self.PlayActionCard = channel.unary_unary(
                '/DominionServer/PlayActionCard',
                request_serializer=dominion__pb2.Card.SerializeToString,
                response_deserializer=dominion__pb2.Response.FromString,
                )
        self.Buy = channel.unary_unary(
                '/DominionServer/Buy',
                request_serializer=dominion__pb2.Card.SerializeToString,
                response_deserializer=dominion__pb2.Response.FromString,
                )
        self.EndTurn = channel.unary_unary(
                '/DominionServer/EndTurn',
                request_serializer=dominion__pb2.PlayerInfo.SerializeToString,
                response_deserializer=dominion__pb2.Response.FromString,
                )


class DominionServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Join(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlayActionCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Buy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndTurn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DominionServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Join': grpc.unary_stream_rpc_method_handler(
                    servicer.Join,
                    request_deserializer=dominion__pb2.PlayerInfo.FromString,
                    response_serializer=dominion__pb2.Message.SerializeToString,
            ),
            'PlayActionCard': grpc.unary_unary_rpc_method_handler(
                    servicer.PlayActionCard,
                    request_deserializer=dominion__pb2.Card.FromString,
                    response_serializer=dominion__pb2.Response.SerializeToString,
            ),
            'Buy': grpc.unary_unary_rpc_method_handler(
                    servicer.Buy,
                    request_deserializer=dominion__pb2.Card.FromString,
                    response_serializer=dominion__pb2.Response.SerializeToString,
            ),
            'EndTurn': grpc.unary_unary_rpc_method_handler(
                    servicer.EndTurn,
                    request_deserializer=dominion__pb2.PlayerInfo.FromString,
                    response_serializer=dominion__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DominionServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DominionServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Join(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/DominionServer/Join',
            dominion__pb2.PlayerInfo.SerializeToString,
            dominion__pb2.Message.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlayActionCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DominionServer/PlayActionCard',
            dominion__pb2.Card.SerializeToString,
            dominion__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Buy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DominionServer/Buy',
            dominion__pb2.Card.SerializeToString,
            dominion__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndTurn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DominionServer/EndTurn',
            dominion__pb2.PlayerInfo.SerializeToString,
            dominion__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
